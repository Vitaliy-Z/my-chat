{"version":3,"sources":["socket.js","components/login/Login.js","components/message/Message.js","components/send/Send.js","components/chat/Chat.js","components/listUsers/listUsers.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","process","Login","currentUser","setCurrentUser","handleBtnEnter","className","TextField","autoComplete","id","label","variant","size","value","onChange","e","target","Button","color","onClick","Message","item","classMessage","user","text","Send","submitForm","useState","messageUser","setMessageUser","onSubmit","preventDefault","message","trim","length","Input","type","Chat","messages","map","key","ListUsers","users","List","Object","values","el","i","ListItem","App","setUsers","isLogin","setIslogin","setMessages","useEffect","on","data","Container","maxWidth","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67c6ef8c.chunk.js","sourcesContent":["import io from \"socket.io-client\";\r\n\r\nconst URL = process.env.REACT_APP_URL || \"localhost:5000\";\r\n\r\nconst socket = io(URL);\r\n\r\nexport default socket;\r\n","import { TextField, Button } from \"@material-ui/core\";\r\nimport \"./login.css\";\r\n\r\nexport default function Login({ currentUser, setCurrentUser, handleBtnEnter }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>–ö–∞–∫ –í–∞—Å –≤–µ–ª–∏—á–∞—Ç—å? üíÅ‚Äç‚ôÄÔ∏è</h2>\r\n      <TextField\r\n        autoComplete=\"off\"\r\n        id=\"outlined-basic\"\r\n        label=\"–í–≤–µ–¥–∏—Ç–µ –∏–º—è\"\r\n        variant=\"outlined\"\r\n        size=\"medium\"\r\n        value={currentUser}\r\n        onChange={(e) => setCurrentUser(e.target.value)}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleBtnEnter}>\r\n        –í–æ–π—Ç–∏\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import \"./message.css\";\r\n\r\nexport default function Message({ item, currentUser }) {\r\n  const classMessage =\r\n    item.user === currentUser\r\n      ? \"messeage-user  messeage-current-user \"\r\n      : \"messeage-user \";\r\n\r\n  return (\r\n    <div className=\"message-container\">\r\n      <span className={classMessage}>\r\n        {item.user}: {item.text}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import { Input, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport \"./send.css\";\r\n\r\nexport default function Send({ submitForm }) {\r\n  const [messageUser, setMessageUser] = useState(\"\");\r\n\r\n  const onSend = (e) => {\r\n    e.preventDefault();\r\n\r\n    const message = messageUser.trim();\r\n\r\n    if (message.length) {\r\n      submitForm(message);\r\n      setMessageUser(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSend}>\r\n      <Input\r\n        className=\"input-message\"\r\n        value={messageUser}\r\n        onChange={(e) => setMessageUser(e.target.value)}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n        –û—Ç–ø—Ä–∞–≤–∏—Ç—å\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import Message from \"../message\";\r\nimport Send from \"../send\";\r\n\r\nimport \"./chat.css\";\r\n\r\nexport default function Chat({ messages, currentUser, submitForm }) {\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"message-list\">\r\n        <div className=\"messages\">\r\n          {messages.map((item, key) => (\r\n            <Message item={item} currentUser={currentUser} key={key} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Send submitForm={submitForm} />\r\n    </div>\r\n  );\r\n}\r\n","import { List, ListItem } from \"@material-ui/core\";\r\nimport \"./listUsers.css\";\r\n\r\nexport default function ListUsers({ users }) {\r\n  return (\r\n    <List>\r\n      {Object.values(users).map((el, i) => (\r\n        <ListItem className=\"listUsersItem\" key={i}>\r\n          {el}\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import { Container } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n\nimport socket from \"./socket\";\nimport Login from \"./components/login\";\nimport Chat from \"./components/chat\";\nimport ListUsers from \"./components/listUsers\";\n\nexport default function App() {\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [users, setUsers] = useState([]);\n\n  const [isLogin, setIslogin] = useState(false);\n\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"message\", (data) => {\n      if (isLogin) {\n        setMessages([{ user: data.user, text: data.message }, ...messages]);\n      }\n    });\n\n    socket.on(\"users\", (data) => {\n      setUsers(data);\n    });\n  });\n\n  const submitForm = (message) => {\n    socket.emit(\"message\", {\n      user: currentUser,\n      message,\n    });\n  };\n\n  const handleBtnEnter = () => {\n    if (currentUser !== \"\") {\n      setIslogin(true);\n      socket.emit(\"change:name\", currentUser);\n    }\n  };\n\n  if (isLogin) {\n    return (\n      <Container maxWidth=\"md\">\n        <Chat\n          messages={messages}\n          currentUser={currentUser}\n          submitForm={submitForm}\n        />\n        <ListUsers users={users} />\n      </Container>\n    );\n  } else {\n    return (\n      <Container maxWidth=\"md\">\n        <Login\n          currentUser={currentUser}\n          setCurrentUser={setCurrentUser}\n          handleBtnEnter={handleBtnEnter}\n        />\n      </Container>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}